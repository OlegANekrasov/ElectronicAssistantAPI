// <auto-generated />
using System;
using ElectronicAssistantAPI.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ElectronicAssistantAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.CommonData.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Characteristic", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeEquipmentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TypeValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeEquipmentId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Equipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeEquipmentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeEquipmentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.EquipmentFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("boolean");

                    b.Property<string>("CharacteristicId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateTimeValue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DecimalValue")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentId")
                        .HasColumnType("text");

                    b.Property<int?>("IntValue")
                        .HasColumnType("integer");

                    b.Property<string>("StringValue")
                        .HasColumnType("text");

                    b.Property<int?>("TypeValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentFeatures");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Status", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.TypeEquipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesEquipment");
                });



            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Characteristic", b =>
                {
                    b.HasOne("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.TypeEquipment", "TypeEquipment")
                        .WithMany("Characteristics")
                        .HasForeignKey("TypeEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeEquipment");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Equipment", b =>
                {
                    b.HasOne("ElectronicAssistantAPI.DAL.Models.CommonData.Room", "Room")
                        .WithMany("Equipments")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Status", "Status")
                        .WithMany("Equipments")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.TypeEquipment", "TypeEquipment")
                        .WithMany("Equipments")
                        .HasForeignKey("TypeEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Status");

                    b.Navigation("TypeEquipment");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.EquipmentFeature", b =>
                {
                    b.HasOne("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Characteristic", "Characteristic")
                        .WithMany()
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Equipment", "Equipment")
                        .WithMany("EquipmentFeature")
                        .HasForeignKey("EquipmentId");

                    b.Navigation("Characteristic");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.CommonData.Room", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Equipment", b =>
                {
                    b.Navigation("EquipmentFeature");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.Status", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("ElectronicAssistantAPI.DAL.Models.EquipmentManagement.TypeEquipment", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
